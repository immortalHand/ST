<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="st.mapper.UserMapper" >
	
	<select id="showUser" resultType="User">
		SELECT
		  *,
		  organization.name AS organnizationname
		FROM USER,
		  organization
		WHERE user.organizationid = organization.id AND TYPE = 2
		 ORDER BY user.id DESC LIMIT 0,5 
	</select>
	
	<select id="selectAll"  resultType="User">
		SELECT 	user.id, 
		user.name, 
		PASSWORD, 
		organizationid, 
		user.img, 
		user.time, 
		phone, 
		information, 
		stuno, 
		TYPE, 
		activeid,
		 organization.name AS organnizationname
		FROM 
		shetuan.user ,
		organization
			WHERE user.organizationid = organization.id AND TYPE = 2
			ORDER BY user.id DESC
	</select>

	<select id="selectAlls"  resultType="User">
		SELECT 	user.id, 
		user.name, 
		PASSWORD, 
		organizationid, 
		user.img, 
		user.time, 
		phone, 
		information, 
		stuno, 
		TYPE, 
		activeid,
		 organization.name AS organnizationname
		FROM 
		shetuan.user ,
		organization
			WHERE user.organizationid = organization.id 
			ORDER BY user.id DESC
	</select>
	
	<select id="showAllBy3"  resultType="User">
		SELECT 	user.id, 
		user.name, 
		PASSWORD, 
		organizationid, 
		user.img, 
		user.time, 
		phone, 
		information, 
		stuno, 
		TYPE, 
		activeid,
		 organization.name AS organnizationname
		FROM 
		shetuan.user ,
		organization
			WHERE user.organizationid = organization.id AND TYPE = 3
			ORDER BY user.id DESC
	</select>

	<select id="selectById" resultType="User" parameterType="int">
		SELECT 	user.id, 
		user.name, 
		PASSWORD, 
		organizationid, 
		user.img, 
		user.time, 
		phone, 
		information, 
		stuno, 
		TYPE, 
		activeid,
		 organization.name AS organnizationname
		FROM USER,
		  organization
		WHERE user.organizationid = organization.id AND user.id = #{id}
	</select>
	
  <resultMap id="BaseResultMap" type="st.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="organizationid" property="organizationid" jdbcType="INTEGER" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="DATE" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="information" property="information" jdbcType="VARCHAR" />
    <result column="stuno" property="stuno" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="activeid" property="activeid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, password, organizationid, img, time, phone, information, stuno, type, activeid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="st.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="st.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="st.pojo.User" >
    insert into user (id, name, password, 
      organizationid, img, time, 
      phone, information, stuno, 
      type, activeid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{organizationid,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, #{time,jdbcType=DATE}, 
      #{phone,jdbcType=VARCHAR}, #{information,jdbcType=VARCHAR}, #{stuno,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{activeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="st.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="organizationid != null" >
        organizationid,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="information != null" >
        information,
      </if>
      <if test="stuno != null" >
        stuno,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="activeid != null" >
        activeid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="organizationid != null" >
        #{organizationid,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        #{information,jdbcType=VARCHAR},
      </if>
      <if test="stuno != null" >
        #{stuno,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="activeid != null" >
        #{activeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="st.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationid != null" >
        organizationid = #{record.organizationid,jdbcType=INTEGER},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.information != null" >
        information = #{record.information,jdbcType=VARCHAR},
      </if>
      <if test="record.stuno != null" >
        stuno = #{record.stuno,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.activeid != null" >
        activeid = #{record.activeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      organizationid = #{record.organizationid,jdbcType=INTEGER},
      img = #{record.img,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=DATE},
      phone = #{record.phone,jdbcType=VARCHAR},
      information = #{record.information,jdbcType=VARCHAR},
      stuno = #{record.stuno,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      activeid = #{record.activeid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="st.pojo.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="organizationid != null" >
        organizationid = #{organizationid,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        information = #{information,jdbcType=VARCHAR},
      </if>
      <if test="stuno != null" >
        stuno = #{stuno,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="activeid != null" >
        activeid = #{activeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="st.pojo.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      organizationid = #{organizationid,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      time = #{time,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      information = #{information,jdbcType=VARCHAR},
      stuno = #{stuno,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      activeid = #{activeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>